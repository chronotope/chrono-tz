name: Update TZ submodule

on:
  schedule:
    - cron: "0 0 * * *"


jobs:
  check-for-update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout and update submodules
        id: update_tz
        shell: sh
        run: |
          set -xeu

          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 \
              submodule update --init --force --recursive

          cd tz

          git fetch --tags --quiet origin
          orig_tag="$(git describe)"

          git checkout master
          git pull --ff-only

          new_tag="$(git describe --abbrev=0)"

          if [ "$new_tag" != "$orig_tag" ]; then
              git reset --hard "$new_tag"
              cd ..
              git add tz
              tz_branch="update-tz-${new_tag}"
              git checkout -b "$tz_branch"
              git config user.name "GitHub Actions"
              git config user.email "quodlibetor@gmail.com"
              git commit -m "Update tz $orig_tag -> $new_tag"
              echo "::set-output name=did_update::yes"
              echo "::set-output name=source_branch::$tz_branch"
          else
              echo "::set-output name=did_update::no"
          fi
      - name: pull-request
        uses: repo-sync/pull-request@v2.2
        if: ${{ steps.update_tz.outputs.did_update == 'yes' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ steps.update_tz.outputs.source_branch }}
      - name: no_update
        if: ${{ steps.update_tz.outputs.did_update == 'no' }}
        shell: sh
        run: echo nope
